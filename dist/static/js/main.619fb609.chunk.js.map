{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","ownProps","signOut","console","log","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","state","firebase","links","uid","SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","match","params","data","authorId","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","useState","setEmail","setPassword","onSubmit","e","preventDefault","handleSubmit","htmlFor","onChange","target","value","signup","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","lastName","signUp","setFirstName","setLastName","createProject","pj","add","Date","setTitle","setContent","history","push","cols","rows","App","path","component","Dashboard","exact","ProjectDetails","SignIn","SignUp","CreateProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","ReactDOM","render","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.619fb609.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authAction\";\r\n\r\nconst SignInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">new PJ</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    signOut: () => {\r\n      console.log(\"登出緊\");\r\n      dispatch(signOut());\r\n    }\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SignInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nconst SignOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">SignUp</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    // signOut\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SignOutLinks);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          subin\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nconst Notifications = props => {\r\n  console.log(\"props\", props);\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul>\r\n            {/*}*/}\r\n            {notifications &&\r\n              notifications.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content} </span>\r\n\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nconst ProjectSummary = props => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{props.project.title}</span>\r\n        <p>id: {props.project.id}</p>\r\n        <p>\r\n          {props.project.authorFirstName} {props.project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">{props.project.content}</p>\r\n        <p className=\"grey-text\">\r\n          {moment(props.project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ProjectList = props => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {props.projects &&\r\n        props.projects.map(project => {\r\n          return (\r\n            <Link to={`/project/${project.id}`} key={project.id}>\r\n              {\" \"}\r\n              <ProjectSummary project={project} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { useEffect } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect, firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Dashboard = props => {\r\n  const { projects, auth, notifications } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <div className=\"dashboard container\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <ProjectList projects={projects} />\r\n        </div>\r\n\r\n        <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 8, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect, firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nconst ProjectDetails = props => {\r\n  const { id } = props.match.params;\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    const {\r\n      authorFirstName,\r\n      authorLastName,\r\n      content,\r\n      title,\r\n      authorId,\r\n      createdAt\r\n    } = project;\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{title}</span>\r\n            <p>{content}</p>\r\n          </div>\r\n          <div className=\"card-action gret lighten-4 grey-text\">\r\n            by- {authorFirstName} {authorLastName}\r\n            <div> {moment(createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>\r\n          <b>\r\n            <h1>loading project....</h1>\r\n          </b>\r\n        </p>\r\n      </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { useState } from \"react\";\r\n// import { Button, TextField } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst SignIn = props => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { authError, auth } = props;\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n  let handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.signIn({ email, password });\r\n    console.log(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={e => handleSubmit(e)} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n        </div>\r\n        <div className=\"red-text center\">\r\n          {authError ? <p>{authError}</p> : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { useState } from \"react\";\r\n// import { Button, TextField } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authAction\";\r\nconst SignUp = props => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [passwordAgain, setPasswordAgain] = useState(\"\");\r\n  const { auth, signup } = props;\r\n  if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n  let handleSubmit = e => {\r\n    e.preventDefault();\r\n    signup({\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"firstName\">First name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstName\"\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastName\"\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"email\">email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"password\">password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        {/*\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"passwordAgain\">password again</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"passwordAgain\"\r\n            onChange={e => setPasswordAgain(e.target.value)}\r\n          />\r\n        </div>\r\n        */}\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n        </div>\r\n        <div className=\"center red-text\">\r\n          {props.authError ? <p>{props.authError}</p> : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    signup: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CreateProject = props => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const { auth } = props;\r\n\r\n  let handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.createProject({ title, content });\r\n    props.history.push(\"/\");\r\n  };\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={e => handleSubmit(e)} className=\"white\">\r\n        <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"title\">title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            onChange={e => setTitle(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"content\">content</label>\r\n          <textarea\r\n            className=\"materialize-textarea\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            id=\"content\"\r\n            onChange={e => setContent(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-field\">\r\n          <button className=\"btn pink lighten-1 z-depth-0\">create</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: pj => dispatch(createProject(pj))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT\",\r\n          project\r\n        });\r\n      })\r\n      .catch(err => dispatch({ type: \"CREATE_PROJECT_ERROR\", err }));\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Nav from \"./Nav\";\n// import About from \"./components/About\";\n// import Home from \"./components/Home\";\n// import Room from \"./components/Room\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" component={Dashboard} exact />\n          <Route path=\"/project/:id\" component={ProjectDetails} exact />\n          <Route path=\"/signin\" component={SignIn} exact />\n          <Route path=\"/signup\" component={SignUp} exact />\n          <Route path=\"/create\" component={CreateProject} exact />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and Room)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}; //null obj\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return { ...state, authError: \"Login failed\" };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return { ...state, authError: null };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return { ...state, authError: null };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup_error\");\r\n      return { ...state, authError: action.err.message };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help\", content: \"Hello World\" },\r\n    { id: \"2\", title: \"一拳超人\", content: \"Hello PDD\" },\r\n    { id: \"3\", title: \"神木\", content: \"Hello PETER\" }\r\n  ]\r\n}; //null obj\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create error\");\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyD2H0MEt7yhHluI9FklYhdozuUlra380r8\",\r\n  authDomain: \"react-firebase-subin.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-subin.firebaseio.com\",\r\n  projectId: \"react-firebase-subin\",\r\n  storageBucket: \"react-firebase-subin.appspot.com\",\r\n  messagingSenderId: \"854058764694\",\r\n  appId: \"1:854058764694:web:69d59d88c23a7e7344b5b7\",\r\n  measurementId: \"G-3N1K4S7J98\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\n// this.auth = firebase.auth();\r\n// this.db = firebase.firestore();\r\n\r\n// login(email, password) {\r\n//   return this.auth.signInWithEmailAndPassword(email, password);\r\n// }\r\n\r\n// logOut() {\r\n//   return this.auth.signOut();\r\n// }\r\n\r\n// async register(name, email, password) {\r\n//   await this.auth.createUserWithEmailAndPassword(email, password);\r\n//   console.log(\"register\");\r\n//   return this.auth.currentUser.updateProfile({ displayName: name });\r\n// }\r\n// addText = (user, text) => {\r\n//   this.db.collection(\"Test\").add({\r\n//     User: user,\r\n//     Text: text\r\n//   });\r\n// };\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  getFirestore,\n  createFirestoreInstance,\n  reduxFirestore\n} from \"redux-firestore\";\nimport { getFirebase, ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig)\n  )\n);\nconst config = {\n  useFirestoreForProfile: true,\n  userProfile: \"users\",\n  attachAuthIsReady: true\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider\n      firebase={fbConfig}\n      config={config}\n      dispatch={store.dispatch}\n      createFirestoreInstance={createFirestoreInstance}\n    >\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}